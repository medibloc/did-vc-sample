/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package issuer;

import express.Express;
import express.utils.Status;
import org.medibloc.panacea.PanaceaApiException;
import org.medibloc.vc.key.Curve;
import org.medibloc.vc.key.KeyDecoder;
import org.medibloc.vc.verifiable.VerifiableCredential;

import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.security.interfaces.ECPrivateKey;

public class App {
    public static void main(String[] args) throws PanaceaApiException, NoSuchAlgorithmException, IOException {
        Issuer issuer = new Issuer();

        Express app = new Express();

        app.get("/vc/did/:did/nonce/:nonce", (req, res) -> {
            String subjectDid = req.getParam("did");
            String nonce = req.getParam("nonce");

            try {
                ECPrivateKey privateKey = KeyDecoder.ecPrivateKey(issuer.getDidWallet().getEcKey().getPrivKey(), Curve.SECP256K1);
                String keyId = issuer.getDidDocument().getVerificationMethods().get(0).getId().getValue();

                VerifiableCredential vc = issuer.issueVc(issuer.getDidDocument().getId().getValue(), subjectDid, privateKey, keyId, nonce);
                res.send(vc.serialize());
            } catch (Exception e) {
                e.printStackTrace();
                res.sendStatus(Status._500);
            }
        });

        int port = 8888;
        System.out.printf("Serving REST: %d\n", port);
        app.listen(port);
    }
}
